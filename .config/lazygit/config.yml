git:
  paging:
    colorArg: always
    pager: delta --dark --paging=never
  parseEmoji: true

gui:
  showIcons: true
  language: 'en'

refresher:
  refreshInterval: 1

customCommands:
  - key: 'u'
    context: 'files'
    description: 'stash include untracked'
    command: 'git stash save --include-untracked "{{index .PromptResponses 0}}" '
    prompts:
      - type: 'input'
        title: 'Stash Message'
        initialValue: 'WIP'

  - key: "<c-c>"
    context: "files"
    description: 'commit files with format'
    prompts:
      - type: "menu"
        title: "What kind of commit type is it?"
        key: "Type"
        options:
          - name: "fix"
            description: "Fix a bug"
            value: "fix"
          - name: "feat"
            description: "Add a new feature"
            value: "feat"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "style"
            description: "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
            value: "style"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "test"
            description: "Add tests"
            value: "test"
          - name: "perf"
            description: "Improve performance"
            value: "perf"
          - name: "chore"
            description: "Changes to the build process or auxiliary tools and libraries such as documentation generation"
            value: "chore"
          - name: "wip"
            description: "Work in progress"
            value: "wip"

      - type: "input"
        title: "(Optional) Enter the scope"
        key: "Scope"
        initialValue: ""

      - type: "input"
        title: "Enter the Message"
        key: "Message"
        initialValue: ""

      - type: "confirm"
        title: "Commit"
        body: "Commit with the message '{{.Form.Type}}{{.Form.Scope}}: {{.Form.Message}}'?"
        # command: "bash -c 'type=\"{{.Form.Type}}\"; scope=\"{{.Form.Scope}}\"; message=\"{{.Form.Message}}\"; emoji=\"{{.Form.Emoji}}\"; commit_message=\"$type$emoji ${scope:+($scope)}: $message\"; git commit -m \"$commit_message\"'"
        command: "bash -c 'type=\"{{.Form.Type}}\"; scope=\"{{.Form.Scope}}\"; message=\"{{.Form.Message}}\"; commit_message=\"$type${scope:+($scope)}: $message\"; git commit -m \"$commit_message\"'"

        loadingText: "Committing..."
